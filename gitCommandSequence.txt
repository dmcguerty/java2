Good reference. Indian woman.
https://www.youtube.com/watch?v=xuB1Id2Wxak

Invoke git client.
(look at git gui)


$ gitk

modified again
****
Good Youtube  [Edureka]
https://www.youtube.com/watch?v=xuB1Id2Wxak

$ git init project1  (initialize an empty Git repository in /Users/deomo/Scrath/project1/.git/


Create local REPO:
Local machine. Create a directory.
Go up a level and right click on the directory. Select Git Bash Here
(puts a .git folder)
Now there is a local repository initialized
Now link git repository to GitHub.
$ git init

Origin is the GitHub REPO.
Connect them. (for command below you must be in the local project folder.
git remote add origin "full remote github path"
git pull origin master  (pull down local files from origin)
(now make a change to a file)


use cmd or powershell

Create a filder Edureka_project (for my local re

$ git clone https://github.com/libgit2/libgit2
$ git config --global user.email "dmcxxxxx@xxxx"
$ git config --global user.name "dmcxxx"
$ git add step1.swift (adding this to remote repository)
$ git commit -m "testing"
$ git add -A  (adds all the files into the index)
$ git commit -a -m "adding all files" (commits all the indexed files)
$ git log

Branching.
$ git branch branch1
$ git checkout branch1
$ git checkout master
$ ls (you wont see any branch1 file)
$ git merge branch1  (you want to have master be the destination)
$ (branch1 still exists, but is merged into master)
$ git commit -a -m "modifyiing file that is already changed" (includes the add command)
$ 
git pull = git fetch + git merge
rebasing is another kind of merging.
rebasing gives you less branches and keeps a cleaner environment


$ git log --graph --full-history --all --color

$ git branch -m oldname newname   (rename a branch)

Some YouTubes

https://www.youtube.com/watch?v=xuB1Id2Wxak
